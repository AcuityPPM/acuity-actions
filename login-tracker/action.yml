name: serverless-deploy
description: Deploy a using AWS Codebuild
inputs:
  PROJECT_NAME:
    description: The CodeBuild project name
    required: false
    default: acuity-remote
  ENVIRONMENT:
    description: environment name
    required: true
  AWS_ACCESS_KEY_ID:
    description: role to assume
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: role to assume
    required: true
  WORKING_DIR:
    description: The dir of the rails app
    required: false
    default: .
  AWS_REGION:
    description: the region to deploy to
    required: false
    default: us-east-1
  GIT_SHA:
    description: the git sha you want to deploy
    required: false

runs:
  using: composite
  steps:
    - name: Checkout from GIT_SHA
      if: ${{ inputs.GIT_SHA}}
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.GIT_SHA }}
    - name: Otherwise, Checkout from HEAD
      if: ${{ ! inputs.GIT_SHA }}
      uses: actions/checkout@v4
    - name: Configure AWS credentials AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are pulled from secrets
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}
    - name: Setup SAM
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
    - name: Run CodeBuild
      uses: aws-actions/aws-codebuild-run-build@v1
      with:
        project-name: ${{ inputs.PROJECT_NAME }}
        disable-source-override: false
        source-version-override: ${{ github.sha }}
        buildspec-override: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                ruby: 3.2.2
            build:
              commands:
                - echo "== INIT RUBY VERSION =="
                - ruby -v
                - echo "== RUN JOB =="
                - echo '== Bundle For Deployment =='
                - cd rails_api
                - bundle config --global silence_root_warning true
                - bundle config --local deployment true
                - bundle config --local path './vendor/bundle'
                - time MAKE="make --jobs 8" bundle install
                - RAILS_ENV=${{ inputs.ENVIRONMENT}} ./weekly_login_tracker_service.sh

    - name: Check Deploy Failure
      if: ${{ failure() }}
      id: check-deploy-failure
      shell: bash
      run: echo '::set-output name=DEPLOY_FAILED::true'
