name: 'Deploy with eb_deployer'
description: Deploy a zip file using eb_deployer
inputs:
  ENVIRONMENT:
    description: environment name
    required: true
  ROLE_ARN:
    description: role to assume
    required: true
   SLACK_BOT_TOKEN:
    description: environment name
    required: true
  WORKING_DIR:
    description: The dir of the rails app
    required: false
    default: ./
  AWS_REGION:
    description: the region to deploy to
    required: false
    default: us-east-1
  RUBY_VERSION:
    description: the version of ruby to use (optional, in place of .ruby-version file)
    required: false
runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
    - name: Use ruby version user input if present
      if: ${{ inputs.RUBY_VERSION }}
      shell: bash
      run: echo "RUBY_VERSION=${{ inputs.RUBY_VERSION }}" >> $GITHUB_ENV
    - name: Otherwise, check .ruby-version
      working-directory:  ${{ inputs.WORKING_DIR }}
      if: ${{ ! inputs.RUBY_VERSION }}
      shell: bash
      run:  echo "RUBY_VERSION=`cat .ruby-version`" >> $GITHUB_ENV
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1.110.0
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
    - name: Install dependencies
      working-directory:  ${{ inputs.WORKING_DIR }}
      shell: bash
      run: bundle install --path vendor/bundle
    - name: Configure AWS credentials AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are pulled from secrets
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.ROLE_ARN}}
        aws-region: us-east-1
    - name: Copy files to the production website with the AWS CLI
      shell: bash
      working-directory:  ${{ inputs.WORKING_DIR }}
      run: |
        aws s3 cp s3://acutity-env/${{ inputs.ENVIRONMENT}} .env
    - name: Deploy
      working-directory:  ${{ inputs.WORKING_DIR }}
      shell: bash
      run: git ls-files | zip app.zip -@ && env -S "$(cat .env)" eb_deploy -p app.zip -e ${{ inputs.ENVIRONMENT}}
    - name: Check Deploy Failure
      if: ${{ failure() }}
      id: check-deploy-failure
      shell: bash
      run: echo '::set-output name=DEPLOY_FAILED::true'
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
        channel-id: 'CU5MQCK35'
        # For posting a simple plain text message
        slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      env:
        SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}
